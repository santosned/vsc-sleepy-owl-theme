# Licensed under the MIT License.
# See the LICENSE file in the project root for more information.

name: Sleepy Owl - Oak (Beta)
author: santosned
type: dark
version: 0.90.1
status: beta

#########################################################################
# - Base color palette
# The base color palette should be defined using rgb() and !cast
#########################################################################
base:
  ansi:
    - !cast &BrightBlack { color: 'rgb(120, 120, 128)' }
    - !cast &BrightBlue { color: 'rgb(150, 180, 255)' }
    - !cast &BrightCyan { color: 'rgb(100, 218, 210)' }
    - !cast &BrightGreen { color: 'rgb(174, 224, 164)' }
    - !cast &BrightPurple { color: 'rgb(224, 144, 224)' }
    - !cast &BrightRed { color: 'rgb(232, 132, 132)' }
    - !cast &BrightWhite { color: 'rgb(245, 245, 255)' }
    - !cast &BrightYellow { color: 'rgb(232, 224, 144)' }
    - !cast &Black { color: 'rgb(12, 10, 18)' }
    - !cast &Blue { color: 'rgb(90, 132, 232)' }
    - !cast &Cyan { color: 'rgb(32, 196, 232)' }
    - !cast &Green { color: 'rgb(164, 216, 96)' }
    - !cast &Purple { color: 'rgb(164, 132, 232)' }
    - !cast &Red { color: 'rgb(232, 96, 116)' }
    - !cast &White { color: 'rgb(225, 225, 230)' }
    - !cast &Yellow { color: 'rgb(232, 190, 86)' }
  vscode:
    # Editor
    - !cast &foreground { color: *White, light: -25 }
    - !cast &background { color: 'rgb(41, 41, 47)' }
    - !cast &cursorColor { color: *Blue, light: 18, alpha: 98 }
    - !cast &selectionBackground { color: *background, light: 32 }

    # Foreground alternatives
    - !cast &foregroundDarker { color: *BrightBlack, light: -4 }
    - !cast &foregroundUnfocused { color: *foreground, light: -45 }

    # Background alternatives
    - !cast &backgroundLight { color: *background, light: 2 }
    - !cast &backgroundLighter { color: *background, light: 8 }
    - !cast &backgroundDark { color: *background, light: -4 }
    - !cast &backgroundDarker { color: *background, light: -8 }
    - !cast &backgroundDragNDrop { color: *selectionBackground, alpha: 75 }

    # List Items
    - !cast &listItemSelected { color: 'rgb(75, 75, 80)', alpha: 45 }
    - !cast &listItemHover { color: 'rgb(75, 75, 80)', alpha: 18 }

    # Statusbar
    - !cast &statusbarBackground { color: *backgroundDarker, light: -6 }
    - !cast &statusbarForeground { color: *White, light: -35 }
    - !cast &statusbarBackgroundDebugging { color: *Purple, light: -70 }
    - !cast &statusbarForegroundDebugging { color: *White, light: 4 }
    - !cast &statusbarBackgroundNoFolder { color: *backgroundDarker, light: -2 }
    - !cast &statusbarForegroundNoFolder {
        color: *foregroundUnfocused,
        light: 8,
      }

    # ActivityBar
    - !cast &activityBarBackground { color: *background, light: 12 }

    # Quick input
    - !cast &quickInputBackground { color: *background, light: 4, alpha: 99 }

    # Active colors for active border and other elements
    - !cast &activeColor { color: *BrightBlue, light: -24 }

    # Badges
    - !cast &badge { color: *activeColor, light: -43 }

    # Color for buttons
    - !cast &button { color: *activeColor, light: -43 }

    # Colors for links in the sidebar, menu, dropdown and other areas.
    - !cast &link { color: *activeColor, light: -3 }

    # Color for selected text in input, menu, and other areas.
    - !cast &textSelection { color: *activeColor, light: -43, alpha: 56 }

    # Color for scrollbar shadows and more.
    - !cast &shadow { color: *Black, alpha: 45 }

    # Color for borders to separate multiple areas and elements.
    - !cast &border { color: *backgroundDarker, light: -6 }

    # Color for borders/outlines of focused areas.
    - !cast &focusColor { color: 'rgba(101, 101, 108, 0.45)' }

    # Color for status types such as success, warnings, error, delete or add
    - !cast &successBackground { color: *Green, light: -35 }
    - !cast &errorForeground { color: *Red, light: -25 }
    - !cast &errorBackground { color: *Red, light: -35 }

#########################################################################
# - VScode editor tokens
# The color in the editor tokens should use the base color palette.
# If you need to customize a color use !cast do not set a new color
# outside the base color palette.
#########################################################################
colors:
  ###############################
  # - Base Colors
  focusBorder: *focusColor # Overall border color for focused elements. This color is only used if not overridden by a component.
  foreground: *foreground # Overall foreground color. This color is only used if not overridden by a component.
  widget.shadow: *shadow # Shadow color of widgets such as Find/Replace inside the editor.
  selection.background: *textSelection # Background color of text selections in the workbench (for input fields or text areas, does not apply to selections within the editor and the terminal).
  descriptionForeground: *foregroundDarker # Foreground color for description text providing additional information, for example for a label.
  errorForeground: *errorForeground # Overall foreground color for error messages (this color is only used if not overridden by a component).
  icon.foreground: *foreground # The default color for icons in the workbench.
  sash.hoverBorder: # The hover border color for draggable sashes

  ###############################
  # - Window border
  # The theme colors for VS Code window border.
  window.activeBorder: # Border color for the active (focused) window.
  window.inactiveBorder: # Border color for the inactive (unfocused) windows

  ###############################
  # - Text colors
  # Colors inside a text document, such as the welcome page.
  textBlockQuote.background: # Background color for block quotes in text.
  textBlockQuote.border: *border # Border color for block quotes in text.
  textCodeBlock.background: # Background color for code blocks in text.
  textLink.activeForeground: !cast { color: *link, light: 16 } # Foreground color for links in text when clicked on and on mouse hover.
  textLink.foreground: *link # Foreground color for links in text.
  textPreformat.foreground: # Foreground color for preformatted text segments.
  textSeparator.foreground: *border # Color for text separators.

  ###############################
  # - Action colors
  # A set of colors to control the interactions with actions across the workbench.
  toolbar.hoverBackground: !cast {
      color: *selectionBackground,
      light: 12,
      alpha: 60,
    } # Toolbar background when hovering over actions using the mouse
  toolbar.hoverOutline: # Toolbar outline when hovering over actions using the mouse
  toolbar.activeBackground: !cast {
      color: *selectionBackground,
      light: 12,
      alpha: 96,
    } # Toolbar background when holding the mouse over actions

  ###############################
  # - Button control
  # A set of colors for button widgets such as Open Folder button in the Explorer of a new window.
  button.background: *button # Button background color.
  button.foreground: *White # Button foreground color.
  button.border: *border # Button border color.
  button.hoverBackground: !cast { color: *button, light: 12 } # Button background color when hovering.
  button.secondaryForeground: # Secondary button foreground color.
  button.secondaryBackground: *button # Secondary button background color.
  button.secondaryHoverBackground: !cast { color: *button, light: 12 } # Secondary button background color when hovering.
  checkbox.background: # Background color of checkbox widget.
  checkbox.foreground: *foreground # Foreground color of checkbox widget.
  checkbox.border: *border # Border color of checkbox widget.

  ###############################
  # - Dropdown control
  # A set of colors for all Dropdown widgets such as in the Integrated Terminal or the Output panel. Note that the Dropdown control is not used on macOS currently.
  dropdown.background: *backgroundLighter # Dropdown background.
  dropdown.listBackground: # Dropdown list background.
  dropdown.border: *border # Dropdown border.
  dropdown.foreground: *foregroundUnfocused # Dropdown foreground.

  ###############################
  # - Input control
  # Colors for input controls such as in the Search view or the Find/Replace dialog.
  input.background: *backgroundLighter # Input box background.
  input.border: *border # Input box border.
  input.foreground: *foreground # Input box foreground.
  input.placeholderForeground: !cast { color: *foregroundDarker, alpha: 86 } # Input box foreground color for placeholder text.
  inputOption.activeBackground: # Background color of activated options in input fields.
  inputOption.activeBorder: *Black # Border color of activated options in input fields.
  inputOption.activeForeground: # Foreground color of activated options in input fields.
  inputOption.hoverBackground: # Background color of activated options in input fields.
  inputValidation.errorBackground: # Input validation background color for error severity.
  inputValidation.errorForeground: # Input validation foreground color for error severity.
  inputValidation.errorBorder: # Input validation border color for error severity.
  inputValidation.infoBackground: # Input validation background color for information severity.
  inputValidation.infoForeground: # Input validation foreground color for information severity.
  inputValidation.infoBorder: # Input validation border color for information severity.
  inputValidation.warningBackground: # Input validation background color for information warning.
  inputValidation.warningForeground: # Input validation foreground color for warning severity.
  inputValidation.warningBorder: # Input validation border color for warning severity.

  ###############################
  # - Scrollbar control#
  scrollbar.shadow: *shadow # Scrollbar slider shadow to indicate that the view is scrolled.
  scrollbarSlider.activeBackground: !cast {
      color: *selectionBackground,
      alpha: 85,
    } # Scrollbar slider background color when clicked on.
  scrollbarSlider.background: !cast { color: *selectionBackground, alpha: 50 } # Scrollbar slider background color.
  scrollbarSlider.hoverBackground: !cast {
      color: *selectionBackground,
      alpha: 65,
    } # Scrollbar slider background color when hovering.

  ###############################
  # - Badge
  # Badges are small information labels, for example, search results count.
  badge.foreground: *White # Badge foreground color.
  badge.background: *badge # Badge background color.

  ###############################
  # - Progress bar
  progressBar.background: *activeColor # Background color of the progress bar shown for long running operations.

  ###############################
  # - Lists and trees
  # Colors for list and trees like the File Explorer. An active list/tree has keyboard focus, an inactive does not.
  list.activeSelectionBackground: *listItemSelected # List/Tree background color for the selected item when the list/tree is active.
  list.activeSelectionForeground: *foreground # List/Tree foreground color for the selected item when the list/tree is active.
  list.activeSelectionIconForeground: *foregroundUnfocused # List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.
  list.dropBackground: *backgroundDragNDrop # List/Tree drag and drop background when moving items around using the mouse.
  list.focusBackground: !cast { color: *listItemSelected, alpha: 45 } # List/Tree background color for the focused item when the list/tree is active.
  list.focusForeground: *foreground # List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.
  list.focusHighlightForeground: # List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.
  list.focusOutline: !cast { color: *selectionBackground, alpha: 0 } # List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.
  list.highlightForeground: *activeColor # List/Tree foreground color of the match highlights when searching inside the list/tree.
  list.hoverBackground: *listItemHover # List/Tree background when hovering over items using the mouse.
  list.hoverForeground: *foreground # List/Tree foreground when hovering over items using the mouse.
  list.inactiveSelectionBackground: !cast {
      color: *listItemSelected,
      alpha: 50,
    } # List/Tree background color for the selected item when the list/tree is inactive.
  list.inactiveSelectionForeground: *foreground # List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.
  list.inactiveSelectionIconForeground: # List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.
  list.inactiveFocusBackground: # List background color for the focused item when the list is inactive. An active list has keyboard focus, an inactive does not. Currently only supported in lists.
  list.inactiveFocusOutline: # List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.
  list.invalidItemForeground: # List/Tree foreground color for invalid items, for example an unresolved root in explorer.
  list.errorForeground: # Foreground color of list items containing errors.
  list.warningForeground: # Foreground color of list items containing warnings.
  listFilterWidget.background: !cast { color: *selectionBackground, light: -8 } # List/Tree Filter background color of typed text when searching inside the list/tree.
  listFilterWidget.outline: !cast { color: *border, alpha: 0 } # List/Tree Filter Widgets outline color of typed text when searching inside the list/tree.
  listFilterWidget.noMatchesOutline: !cast { color: *border, alpha: 0 } # List/Tree Filter Widgets outline color when no match is found of typed text when searching inside the list/tree.
  list.filterMatchBackground: !cast { color: *Yellow, light: -25, alpha: 16 } # Background color of the filtered matches in lists and trees.
  list.filterMatchBorder: !cast { color: *Yellow, light: -25, alpha: 60 } # Border color of the filtered matches in lists and trees.
  list.deemphasizedForeground: *foregroundUnfocused # List/Tree foreground color for items that are deemphasized.
  tree.indentGuidesStroke: !cast { color: *BrightBlack, alpha: 35 } # Tree Widgets stroke color for indent guides.
  tree.tableColumnsBorder: !cast { color: *BrightBlack, alpha: 35 } # Tree stroke color for the indentation guides.
  tree.tableOddRowsBackground: # Background color for odd table rows.

  ###############################
  # - Activity Bar
  # The Activity Bar is displayed either on the far left or right of the workbench and allows fast switching between views of the Side Bar.
  activityBar.background: *activityBarBackground # Activity Bar background color.
  activityBar.dropBorder: *selectionBackground # Drag and drop feedback color for the activity bar items. The activity bar is showing on the far left or right and allows to switch between views of the side bar.
  activityBar.foreground: *foreground # Activity Bar foreground color (for example used for the icons).
  activityBar.inactiveForeground: !cast { color: *BrightBlack, light: -4 } # Activity Bar item foreground color when it is inactive.
  activityBar.border: *border # Activity Bar border color with the Side Bar.
  activityBarBadge.background: *badge # Activity notification badge background color.
  activityBarBadge.foreground: *White # Activity notification badge foreground color.
  activityBar.activeBorder: *activeColor # Activity Bar active indicator border color.
  activityBar.activeBackground: # Activity Bar optional background color for the active element.
  activityBar.activeFocusBorder: # Activity bar focus border color for the active item.

  ###############################
  # - Side Bar
  # The Side Bar contains views like the Explorer and Search.
  sideBar.background: *backgroundDarker # Side Bar background color.
  sideBar.foreground: *foregroundUnfocused # Side Bar foreground color. The Side Bar is the container for views like Explorer and Search.
  sideBar.border: *border # Side Bar border color on the side separating the editor.
  sideBar.dropBackground: *backgroundDragNDrop # Drag and drop feedback color for the side bar sections. The color should have transparency so that the side bar sections can still shine through.
  sideBarTitle.foreground: !cast { color: *BrightBlack, light: -16 } # Side Bar title foreground color.
  sideBarSectionHeader.background: !cast { color: *backgroundDarker, alpha: 30 } # Side Bar section header background color.
  sideBarSectionHeader.foreground: *BrightBlack # Side Bar section header foreground color.
  sideBarSectionHeader.border: *border # Side bar section header border color.

  ###############################
  # - Minimap
  # The Minimap shows a minified version of the current file.
  minimap.findMatchHighlight: # Highlight color for matches from search within files.
  minimap.selectionHighlight: # Highlight color for the editor selection.
  minimap.errorHighlight: # Highlight color for errors within the editor.
  minimap.warningHighlight: # Highlight color for warnings within the editor.
  minimap.background: # Minimap background color.
  minimap.selectionOccurrenceHighlight: # Minimap marker color for repeating editor selections.
  minimap.foregroundOpacity: # Opacity of foreground elements rendered in the minimap. For example, "#000000c0" will render the elements with 75% opacity.
  minimapSlider.background: !cast { color: *selectionBackground, alpha: 40 } # Minimap slider background color.
  minimapSlider.hoverBackground: !cast {
      color: *selectionBackground,
      alpha: 60,
    } # Minimap slider background color when hovering.
  minimapSlider.activeBackground: !cast {
      color: *selectionBackground,
      alpha: 70,
    } # Minimap slider background color when clicked on.
  minimapGutter.addedBackground: # Minimap gutter color for added content.
  minimapGutter.modifiedBackground: # Minimap gutter color for modified content.
  minimapGutter.deletedBackground: # Minimap gutter color for deleted content.

  ###############################
  # - Editor Groups & Tabs
  # Editor Groups are the containers of editors. There can be many editor groups. A Tab is the container of an editor. Multiple Tabs can be opened in one editor group.
  editorGroup.border: !cast { color: *border, alpha: 50 } # Color to separate multiple editor groups from each other.
  editorGroup.dropBackground: *backgroundDragNDrop # Background color when dragging editors around.
  editorGroupHeader.noTabsBackground: # Background color of the editor group title header when Tabs are disabled (set "workbench.editor.showTabs": false).
  editorGroupHeader.tabsBackground: *backgroundDarker # Background color of the Tabs container.
  editorGroupHeader.tabsBorder: *border # Border color below the editor tabs control when tabs are enabled.
  editorGroupHeader.border: # Border color between editor group header and editor (below breadcrumbs if enabled).
  editorGroup.emptyBackground: # Background color of an empty editor group.
  editorGroup.focusedEmptyBorder: # Border color of an empty editor group that is focused.
  tab.activeBackground: *background # Active Tab background color in an active group.
  tab.unfocusedActiveBackground: # Active Tab background color in an inactive editor group.
  tab.activeForeground: *foreground # Active Tab foreground color in an active group.
  tab.border: *border # Border to separate Tabs from each other.
  tab.activeBorder: *background # Bottom border for the active tab.
  tab.unfocusedActiveBorder: *background # Bottom border for the active tab in an inactive editor group.
  tab.activeBorderTop: *activeColor # Top border for the active tab.
  tab.unfocusedActiveBorderTop: *background # Top border for the active tab in an inactive editor group
  tab.lastPinnedBorder: # Border on the right of the last pinned editor to separate from unpinned editors.
  tab.inactiveBackground: *backgroundDarker # Inactive Tab background color.
  tab.unfocusedInactiveBackground: # Inactive Tab background color in an unfocused group
  tab.inactiveForeground: *BrightBlack # Inactive Tab foreground color in an active group.
  tab.unfocusedActiveForeground: # Active tab foreground color in an inactive editor group.
  tab.unfocusedInactiveForeground: # Inactive tab foreground color in an inactive editor group.
  tab.hoverBackground: # Tab background color when hovering
  tab.unfocusedHoverBackground: # Tab background color in an unfocused group when hovering
  tab.hoverForeground: # Tab foreground color when hovering
  tab.unfocusedHoverForeground: # Tab foreground color in an unfocused group when hovering
  tab.hoverBorder: # Border to highlight tabs when hovering
  tab.unfocusedHoverBorder: # Border to highlight tabs in an unfocused group when hovering
  tab.activeModifiedBorder: # Border on the top of modified (dirty) active tabs in an active group.
  tab.inactiveModifiedBorder: # Border on the top of modified (dirty) inactive tabs in an active group.
  tab.unfocusedActiveModifiedBorder: # Border on the top of modified (dirty) active tabs in an unfocused group.
  tab.unfocusedInactiveModifiedBorder: # Border on the top of modified (dirty) inactive tabs in an unfocused group.
  editorPane.background: # Background color of the editor pane visible on the left and right side of the centered editor layout.
  sideBySideEditor.horizontalBorder: # Color to separate two editors from each other when shown side by side in an editor group from top to bottom.
  sideBySideEditor.verticalBorder: # Color to separate two editors from each other when shown side by side in an editor group from left to right.

  ###############################
  # - Editor colors
  # The most prominent editor colors are the token colors used for syntax highlighting and are based on the language grammar installed. These colors are defined by the Color Theme but can also be customized with the editor.tokenColorCustomizations setting. See Customizing a Color Theme for details on updating a Color Theme and the available token types.
  # All other editor colors are listed here:
  editor.background: *background # Editor background color.
  editor.foreground: *foreground # Editor default foreground color.
  editorLineNumber.foreground: !cast { color: *BrightBlack, alpha: 80 } # Color of editor line numbers.
  editorLineNumber.activeForeground: *foreground # Color of the active editor line number.
  editorCursor.background: *cursorColor # The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.
  editorCursor.foreground: *cursorColor # Color of the editor cursor.

  ###############################
  # - Selection colors are visible when selecting one or more characters. In addition to the selection also all regions with the same content are highlighted.
  editor.selectionBackground: !cast { color: *selectionBackground, alpha: 96 } # Color of the editor selection.
  editor.selectionForeground: # Color of the selected text for high contrast.
  editor.inactiveSelectionBackground: # Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.
  editor.selectionHighlightBackground: !cast {
      color: *Green,
      light: 18,
      alpha: 20,
    } # Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.
  editor.selectionHighlightBorder: *background # Border color for regions with the same content as the selection.

  ###############################
  # - Word highlight colors are visible when the cursor is inside a symbol or a word. Depending on the language support available for the file type, all matching references and declarations are highlighted and read and write accesses get different colors. If document symbol language support is not available, this falls back to word highlighting.
  editor.wordHighlightBackground: !cast {
      color: *foreground,
      light: -45,
      alpha: 5,
    } # Background color of a symbol during read-access, for example when reading a variable. The color must not be opaque so as not to hide underlying decorations.
  editor.wordHighlightBorder: !cast {
      color: *foreground,
      light: -45,
      alpha: 32,
    } # Border color of a symbol during read-access, for example when reading a variable.
  editor.wordHighlightStrongBackground: !cast {
      color: *Yellow,
      light: 18,
      alpha: 5,
    } # Background color of a symbol during write-access, for example when writing to a variable. The color must not be opaque so as not to hide underlying decorations.
  editor.wordHighlightStrongBorder: !cast {
      color: *Yellow,
      light: 18,
      alpha: 30,
    } # Border color of a symbol during write-access, for example when writing to a variable.

  ###############################
  # - Find colors depend on the current find string in the Find/Replace dialog.
  editor.findMatchBackground: !cast { color: *Green, light: -25, alpha: 50 } # Color of the current search match.
  editor.findMatchHighlightBackground: !cast {
      color: *Yellow,
      light: -25,
      alpha: 25,
    } # Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.
  editor.findRangeHighlightBackground: # Color the range limiting the search (Enable Find in Selection in the find widget). The color must not be opaque so as not to hide underlying decorations.
  editor.findMatchBorder: # Border color of the current search match.
  editor.findMatchHighlightBorder: *background # Border color of the other search matches.
  editor.findRangeHighlightBorder: # Border color the range limiting the search (Enable Find in Selection in the find widget).

  ###############################
  # - Search Editor colors highlight results in a Search Editor. This can be configured separately from other find matches in order to better differentiate between different classes of match in the same editor.
  searchEditor.findMatchBackground: # Color of the editors results.
  searchEditor.findMatchBorder: # Border color of the editors results.
  searchEditor.textInputBorder: # Search editor text input box border.

  ###############################
  # - The hover highlight is shown behind the symbol for which a hover is shown.
  editor.hoverHighlightBackground: !cast { color: *textSelection, alpha: 25 } # Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.

  ###############################
  # - The current line is typically shown as either background highlight or a border (not both).
  editor.lineHighlightBackground: !cast {
      color: *selectionBackground,
      alpha: 45,
    } # Background color for the highlight of line at the cursor position.
  editor.lineHighlightBorder: # Background color for the border around the line at the cursor position.

  ###############################
  # - The color for unicode highlights
  editorUnicodeHighlight.border: # Border color used to highlight unicode characters.

  ###############################
  # - The link color is visible when clicking on a link.
  editorLink.activeForeground: *Purple # Color of active links.

  ###############################
  # - The range highlight is visible when selecting a search result.
  editor.rangeHighlightBackground: !cast { color: *backgroundDarker, alpha: 96 } # Background color of highlighted ranges, used by Quick Open, Symbol in File and Find features. The color must not be opaque so as not to hide underlying decorations.
  editor.rangeHighlightBorder: # Background color of the border around highlighted ranges.

  ###############################
  # - The symbol highlight is visible when navigating to a symbol via a command such as Go to Definition.
  editor.symbolHighlightBackground: # Background color of highlighted symbol. The color must not be opaque so as not to hide underlying decorations.
  editor.symbolHighlightBorder: # Background color of the border around highlighted symbols.

  ###############################
  # - To see the editor White spaces, enable Toggle Render Whitespace.
  editorWhitespace.foreground: !cast { color: *BrightBlack, alpha: 10 } # Color of whitespace characters in the editor.

  ###############################
  # - To see the editor indent guides, set "editor.guides.indentation": true and "editor.guides.highlightActiveIndentation": true.
  editorIndentGuide.background: !cast { color: *BrightBlack, alpha: 10 } # Color of the editor indentation guides.
  editorIndentGuide.activeBackground: !cast { color: *BrightBlack, alpha: 65 } # Color of the active editor indentation guide.

  ###############################
  # - To see the editor inline hints, set "editor.inlineSuggest.enabled": true.
  editorInlayHint.background: # Background color of inline hints.
  editorInlayHint.foreground: # Foreground color of inline hints.
  editorInlayHint.typeForeground: # Foreground color of inline hints for types
  editorInlayHint.typeBackground: # Background color of inline hints for types
  editorInlayHint.parameterForeground: # Foreground color of inline hints for parameters
  editorInlayHint.parameterBackground: # Background color of inline hints for parameters

  ###############################
  # - To see editor rulers, define their location with "editor.rulers"
  editorRuler.foreground: # Color of the editor rulers.
  editor.linkedEditingBackground: # Background color when the editor is in linked editing mode.

  ###############################
  # - CodeLens:
  editorCodeLens.foreground: # Foreground color of an editor CodeLens.

  ###############################
  # - Lightbulb:
  editorLightBulb.foreground: *Yellow # The color used for the lightbulb actions icon.
  editorLightBulbAutoFix.foreground: *Blue # The color used for the lightbulb auto fix actions icon.

  ###############################
  # - Bracket matches:
  editorBracketMatch.background: !cast { color: *Green, light: -50, alpha: 25 } # Background color behind matching brackets.
  editorBracketMatch.border: !cast { color: *Green, light: -50, alpha: 75 } # Color for matching brackets boxes.

  ###############################
  # - Bracket pair colorization:
  editorBracketHighlight.foreground1: # Foreground color of brackets (1). Requires enabling bracket pair colorization.
  editorBracketHighlight.foreground2: # Foreground color of brackets (2). Requires enabling bracket pair colorization.
  editorBracketHighlight.foreground3: # Foreground color of brackets (3). Requires enabling bracket pair colorization.
  editorBracketHighlight.foreground4: # Foreground color of brackets (4). Requires enabling bracket pair colorization.
  editorBracketHighlight.foreground5: # Foreground color of brackets (5). Requires enabling bracket pair colorization.
  editorBracketHighlight.foreground6: # Foreground color of brackets (6). Requires enabling bracket pair colorization.
  editorBracketHighlight.unexpectedBracket.foreground: # Foreground color of unexpected brackets.

  ###############################
  # - Bracket pair guides:
  editorBracketPairGuide.activeBackground1: # Background color of active bracket pair guides (1). Requires enabling bracket pair guides.
  editorBracketPairGuide.activeBackground2: # Background color of active bracket pair guides (2). Requires enabling bracket pair guides.
  editorBracketPairGuide.activeBackground3: # Background color of active bracket pair guides (3). Requires enabling bracket pair guides.
  editorBracketPairGuide.activeBackground4: # Background color of active bracket pair guides (4). Requires enabling bracket pair guides.
  editorBracketPairGuide.activeBackground5: # Background color of active bracket pair guides (5). Requires enabling bracket pair guides.
  editorBracketPairGuide.activeBackground6: # Background color of active bracket pair guides (6). Requires enabling bracket pair guides.
  editorBracketPairGuide.background1: # Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.
  editorBracketPairGuide.background2: # Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.
  editorBracketPairGuide.background3: # Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.
  editorBracketPairGuide.background4: # Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.
  editorBracketPairGuide.background5: # Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.
  editorBracketPairGuide.background6: # Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.

  ###############################
  # - Folding:
  editor.foldBackground: # Background color for folded ranges. The color must not be opaque so as not to hide underlying decorations.

  ###############################
  # - Overview ruler:
  # This ruler is located beneath the scroll bar on the right edge of the
  # editor and gives an overview of the decorations in the editor.
  editorOverviewRuler.background: *background # Background color of the editor overview ruler. Only used when the minimap is enabled and placed on the right side of the editor.
  editorOverviewRuler.border: *background # Color of the overview ruler border.
  editorOverviewRuler.findMatchForeground: # Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.
  editorOverviewRuler.rangeHighlightForeground: # Overview ruler marker color for highlighted ranges, like by the Quick Open, Symbol in File and Find features. The color must not be opaque so as not to hide underlying decorations.
  editorOverviewRuler.selectionHighlightForeground: # Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.
  editorOverviewRuler.wordHighlightForeground: # Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.
  editorOverviewRuler.wordHighlightStrongForeground: # Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.
  editorOverviewRuler.modifiedForeground: !cast {
      color: *Yellow,
      light: 25,
      alpha: 75,
    } # Overview ruler marker color for modified content.
  editorOverviewRuler.addedForeground: !cast {
      color: *Green,
      light: 25,
      alpha: 75,
    } # Overview ruler marker color for added content.
  editorOverviewRuler.deletedForeground: !cast {
      color: *Red,
      light: 25,
      alpha: 75,
    } # Overview ruler marker color for deleted content.
  editorOverviewRuler.errorForeground: !cast {
      color: *Red,
      light: -5,
      alpha: 75,
    } # Overview ruler marker color for errors.
  editorOverviewRuler.warningForeground: !cast {
      color: *BrightYellow,
      light: -5,
      alpha: 75,
    } # Overview ruler marker color for warnings.
  editorOverviewRuler.infoForeground: # Overview ruler marker color for infos.
  editorOverviewRuler.bracketMatchForeground: # Overview ruler marker color for matching brackets.

  ###############################
  # - Errors and warnings:
  editorError.foreground: # Foreground color of error squiggles in the editor.
  editorError.border: # Border color of error boxes in the editor.
  editorError.background: # Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.
  editorWarning.foreground: # Foreground color of warning squiggles in the editor.
  editorWarning.border: # Border color of warning boxes in the editor.
  editorWarning.background: # Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.
  editorInfo.foreground: # Foreground color of info squiggles in the editor.
  editorInfo.border: # Border color of info boxes in the editor.
  editorInfo.background: # Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.
  editorHint.foreground: # Foreground color of hints in the editor.
  editorHint.border: # Border color of hint boxes in the editor.
  problemsErrorIcon.foreground: # The color used for the problems error icon.
  problemsWarningIcon.foreground: # The color used for the problems warning icon.
  problemsInfoIcon.foreground: # The color used for the problems info icon.

  ###############################
  # - Unused source code:
  editorUnnecessaryCode.border: # Border color of unnecessary (unused) source code in the editor.
  editorUnnecessaryCode.opacity: # Opacity of unnecessary (unused) source code in the editor. For example, "#000000c0" will render the code with 75% opacity. For high contrast themes, use the "editorUnnecessaryCode.border" theme color to underline unnecessary code instead of fading it out.

  ###############################
  # - The gutter contains the glyph margins and the line numbers:
  editorGutter.background: *background # Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.
  editorGutter.modifiedBackground: !cast { color: *Yellow, light: 25 } # Editor gutter background color for lines that are modified.
  editorGutter.addedBackground: !cast { color: *Green, light: 25 } # Editor gutter background color for lines that are added.
  editorGutter.deletedBackground: !cast { color: *Red, light: 25 } # Editor gutter background color for lines that are deleted.
  editorGutter.commentRangeForeground: # Editor gutter decoration color for commenting ranges.
  editorGutter.foldingControlForeground: *foreground # Color of the folding control in the editor gutter.

  ###############################
  # - Diff editor colors
  # For coloring inserted and removed text, use either a background or a border color but not both.
  diffEditor.insertedTextBackground: # Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.
  diffEditor.insertedTextBorder: # Outline color for the text that got inserted.
  diffEditor.removedTextBackground: # Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.
  diffEditor.removedTextBorder: # Outline color for text that got removed.
  diffEditor.border: # Border color between the two text editors.
  diffEditor.diagonalFill: # Color of the diff editors diagonal fill. The diagonal fill is used in side-by-side diff views.
  diffEditor.insertedLineBackground: # Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.
  diffEditor.removedLineBackground: # Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.
  diffEditorGutter.insertedLineBackground: # Background color for the margin where lines got inserted.
  diffEditorGutter.removedLineBackground: # Background color for the margin where lines got removed.
  diffEditorOverview.insertedForeground: # Diff overview ruler foreground for inserted content.
  diffEditorOverview.removedForeground: # Diff overview ruler foreground for removed content.

  ###############################
  # - Editor widget colors#
  # The Editor widget is shown in front of the editor content. Examples are the Find/Replace dialog, the suggestion widget, and the editor hover.
  editorWidget.foreground: *foreground # Foreground color of editor widgets, such as find/replace.
  editorWidget.background: *backgroundDarker # Background color of editor widgets, such as Find/Replace.
  editorWidget.border: *border # Border color of the editor widget unless the widget does not contain a border or defines its own border color.
  editorWidget.resizeBorder: *activeColor # Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.
  editorSuggestWidget.background: # Background color of the suggestion widget.
  editorSuggestWidget.border: # Border color of the suggestion widget.
  editorSuggestWidget.foreground: # Foreground color of the suggestion widget.
  editorSuggestWidget.focusHighlightForeground: # Color of the match highlights in the suggest widget when an item is focused.
  editorSuggestWidget.highlightForeground: # Color of the match highlights in the suggestion widget.
  editorSuggestWidget.selectedBackground: # Background color of the selected entry in the suggestion widget.
  editorSuggestWidget.selectedForeground: # Foreground color of the selected entry in the suggest widget.
  editorSuggestWidget.selectedIconForeground: # Icon foreground color of the selected entry in the suggest widget.
  editorSuggestWidgetStatus.foreground: # Foreground color of the suggest widget status.
  editorHoverWidget.foreground: # Foreground color of the editor hover.
  editorHoverWidget.background: # Background color of the editor hover.
  editorHoverWidget.border: # Border color of the editor hover.
  editorHoverWidget.highlightForeground: # Foreground color of the active item in the parameter hint.
  editorHoverWidget.statusBarBackground: # Background color of the editor hover status bar.
  editorGhostText.border: # Border color of the ghost text shown by inline completion providers and the suggest preview.
  editorGhostText.background: # Background color of the ghost text in the editor.
  editorGhostText.foreground: # Foreground color of the ghost text shown by inline completion providers and the suggest preview.
  # - The Debug Exception widget is a peek view that shows in the editor when debug stops at an exception.
  debugExceptionWidget.background: # Exception widget background color.
  debugExceptionWidget.border: # Exception widget border color.
  # - The editor marker view shows when navigating to errors and warnings in the editor (Go to Next Error or Warning command).
  editorMarkerNavigation.background: # Editor marker navigation widget background.
  editorMarkerNavigationError.background: # Editor marker navigation widget error color.
  editorMarkerNavigationWarning.background: # Editor marker navigation widget warning color.
  editorMarkerNavigationInfo.background: # Editor marker navigation widget info color.
  editorMarkerNavigationError.headerBackground: # Editor marker navigation widget error heading background.
  editorMarkerNavigationWarning.headerBackground: # Editor marker navigation widget warning heading background.
  editorMarkerNavigationInfo.headerBackground: # Editor marker navigation widget info heading background.

  ###############################
  # - Peek view colors
  # Peek views are used to show references and declarations as a view inside the editor.
  peekView.border: # Color of the peek view borders and arrow.
  peekViewEditor.background: # Background color of the peek view editor.
  peekViewEditorGutter.background: # Background color of the gutter in the peek view editor.
  peekViewEditor.matchHighlightBackground: # Match highlight color in the peek view editor.
  peekViewEditor.matchHighlightBorder: # Match highlight border color in the peek view editor.
  peekViewResult.background: # Background color of the peek view result list.
  peekViewResult.fileForeground: # Foreground color for file nodes in the peek view result list.
  peekViewResult.lineForeground: # Foreground color for line nodes in the peek view result list.
  peekViewResult.matchHighlightBackground: # Match highlight color in the peek view result list.
  peekViewResult.selectionBackground: # Background color of the selected entry in the peek view result list.
  peekViewResult.selectionForeground: # Foreground color of the selected entry in the peek view result list.
  peekViewTitle.background: # Background color of the peek view title area.
  peekViewTitleDescription.foreground: # Color of the peek view title info.
  peekViewTitleLabel.foreground: # Color of the peek view title.

  ###############################
  # - Merge conflicts colors
  # Merge conflict decorations are shown when the editor contains special diff ranges.
  merge.currentHeaderBackground: # Current header background in inline merge conflicts. The color must not be opaque so as not to hide underlying decorations.
  merge.currentContentBackground: # Current content background in inline merge conflicts. The color must not be opaque so as not to hide underlying decorations.
  merge.incomingHeaderBackground: # Incoming header background in inline merge conflicts. The color must not be opaque so as not to hide underlying decorations.
  merge.incomingContentBackground: # Incoming content background in inline merge conflicts. The color must not be opaque so as not to hide underlying decorations.
  merge.border: # Border color on headers and the splitter in inline merge conflicts.
  merge.commonContentBackground: # Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.
  merge.commonHeaderBackground: # Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.
  editorOverviewRuler.currentContentForeground: # Current overview ruler foreground for inline merge conflicts.
  editorOverviewRuler.incomingContentForeground: # Incoming overview ruler foreground for inline merge conflicts.
  editorOverviewRuler.commonContentForeground: # Common ancestor overview ruler foreground for inline merge conflicts.

  ###############################
  # - Panel colors
  # Panels are shown below the editor area and contain views like Output and Integrated Terminal.
  panel.background: *backgroundLight # Panel background color.
  panel.border: *border # Panel border color to separate the panel from the editor.
  panel.dropBorder: !cast { color: *selectionBackground, alpha: 45 } # Drag and drop feedback color for the panel titles. Panels are shown below the editor area and contain views like output and integrated terminal.
  panelTitle.activeBorder: *activeColor # Border color for the active panel title.
  panelTitle.activeForeground: *foreground # Title color for the active panel.
  panelTitle.inactiveForeground: *BrightBlack # Title color for the inactive panel.
  panelInput.border: *border # Input box border for inputs in the panel.
  panelSection.border: *border # Panel section border color used when multiple views are stacked horizontally in the panel. Panels are shown below the editor area and contain views like output and integrated terminal.
  panelSection.dropBackground: !cast { color: *selectionBackground, alpha: 45 } # Drag and drop feedback color for the panel sections. The color should have transparency so that the panel sections can still shine through. Panels are shown below the editor area and contain views like output and integrated terminal.
  panelSectionHeader.background: # Panel section header background color. Panels are shown below the editor area and contain views like output and integrated terminal.
  panelSectionHeader.foreground: # Panel section header foreground color. Panels are shown below the editor area and contain views like output and integrated terminal.
  panelSectionHeader.border: *border # Panel section header border color used when multiple views are stacked vertically in the panel. Panels are shown below the editor area and contain views like output and integrated terminal.

  ###############################
  # - Status Bar colors
  # The Status Bar is shown in the bottom of the workbench.
  statusBar.background: *statusbarBackground # Standard Status Bar background color.
  statusBar.foreground: *statusbarForeground # Status Bar foreground color.
  statusBar.border: !cast { color: *border, alpha: 0 } # Status Bar border color separating the Status Bar and editor.
  statusBar.debuggingBackground: *statusbarBackgroundDebugging # Status Bar background color when a program is being debugged.
  statusBar.debuggingForeground: *statusbarForegroundDebugging # Status Bar foreground color when a program is being debugged.
  statusBar.debuggingBorder: !cast { color: *border, alpha: 0 } # Status Bar border color separating the Status Bar and editor when a program is being debugged.
  statusBar.noFolderBackground: *statusbarBackgroundNoFolder # Status Bar background color when no folder is opened.
  statusBar.noFolderForeground: *statusbarForegroundNoFolder # Status Bar foreground color when no folder is opened.
  statusBar.noFolderBorder: *border # Status Bar border color separating the Status Bar and editor when no folder is opened.
  statusBarItem.activeBackground: !cast {
      color: *selectionBackground,
      alpha: 55,
    } # Status Bar item background color when clicking.
  statusBarItem.hoverBackground: !cast {
      color: *selectionBackground,
      alpha: 55,
    } # Status Bar item background color when hovering.
  statusBarItem.prominentForeground: # Status Bar prominent items foreground color.
  statusBarItem.prominentBackground: !cast {
      color: *selectionBackground,
      alpha: 55,
    } # Status Bar prominent items background color.
  statusBarItem.prominentHoverBackground: !cast {
      color: *selectionBackground,
      alpha: 85,
    } # Status Bar prominent items background color when hovering.
  statusBarItem.remoteBackground: *statusbarBackground # Background color for the remote indicator on the status bar.
  statusBarItem.remoteForeground: *Green # Foreground color for the remote indicator on the status bar.
  statusBarItem.errorBackground: *statusbarBackground # Status bar error items background color. Error items stand out from other status bar entries to indicate error conditions.
  statusBarItem.errorForeground: *Red # Status bar error items foreground color. Error items stand out from other status bar entries to indicate error conditions.
  statusBarItem.warningBackground: *statusbarBackground # Status bar warning items background color. Warning items stand out from other status bar entries to indicate warning conditions. The status bar is shown in the bottom of the window.
  statusBarItem.warningForeground: *Yellow # Status bar warning items foreground color. Warning items stand out from other status bar entries to indicate warning conditions. The status bar is shown in the bottom of the window.
  statusBarItem.compactHoverBackground: !cast {
      color: *selectionBackground,
      alpha: 55,
    } # Status bar item background color when hovering an item that contains two hovers. The status bar is shown in the bottom of the window.
  statusBarItem.focusBorder: !cast { color: *selectionBackground, alpha: 0 } # Status bar item border color when focused on keyboard navigation. The status bar is shown in the bottom of the window.
  statusBar.focusBorder: !cast { color: *selectionBackground, alpha: 0 } # Status bar border color when focused on keyboard navigation. The status bar is shown in the bottom of the window.

  ###############################
  # - Title Bar colors
  titleBar.activeBackground: *backgroundDarker # Title Bar background when the window is active.
  titleBar.activeForeground: *foregroundUnfocused # Title Bar foreground when the window is active.
  titleBar.inactiveBackground: *backgroundDarker # Title Bar background when the window is inactive.
  titleBar.inactiveForeground: *BrightBlack # Title Bar foreground when the window is inactive.
  titleBar.border: *border # Title bar border color.

  ###############################
  # - Menu Bar colors
  menubar.selectionForeground: *foreground # Foreground color of the selected menu item in the menubar.
  menubar.selectionBackground: !cast { color: *selectionBackground, alpha: 40 } # Background color of the selected menu item in the menubar.
  menubar.selectionBorder: # Border color of the selected menu item in the menubar.
  menu.foreground: !cast { color: *foregroundUnfocused, light: 24 } # Foreground color of menu items.
  menu.background: *backgroundLight # Background color of menu items.
  menu.selectionForeground: *foreground # Foreground color of the selected menu item in menus.
  menu.selectionBackground: # Background color of the selected menu item in menus.
  menu.selectionBorder: # Border color of the selected menu item in menus.
  menu.separatorBackground: *border # Color of a separator menu item in menus.
  menu.border: *border # Border color of menus.

  ###############################
  # - Notification colors
  # Notification toasts slide up from the bottom-right of the workbench. Once opened in the Notification Center, they are displayed in a list with a header.
  notificationCenter.border: *border # Notification Center border color.
  notificationCenterHeader.foreground: # Notification Center header foreground color.
  notificationCenterHeader.background: *backgroundDarker # Notification Center header background color.
  notificationToast.border: *border # Notification toast border color.
  notifications.foreground: *foregroundUnfocused # Notification foreground color.
  notifications.background: *backgroundDarker # Notification background color.
  notifications.border: *backgroundDarker # Notification border color separating from other notifications in the Notification Center.
  notificationLink.foreground: *link # Notification links foreground color.
  notificationsErrorIcon.foreground: # The color used for the notification error icon.
  notificationsWarningIcon.foreground: # The color used for the notification warning icon.
  notificationsInfoIcon.foreground: # The color used for the notification info icon.

  ###############################
  # - Banner colors
  # The banner appears below the title bar and spans the entire width of the workbench when visible.
  banner.background: # Banner background color.
  banner.foreground: # Banner foreground color.
  banner.iconForeground: # Color for the icon in front of the banner text.

  ###############################
  # - Extensions colors
  extensionButton.prominentForeground: # Extension view button foreground color (for example Install button).
  extensionButton.prominentBackground: # Extension view button background color.
  extensionButton.prominentHoverBackground: # Extension view button background hover color.
  extensionBadge.remoteBackground: # Background color for the remote badge in the extensions view.
  extensionBadge.remoteForeground: # Foreground color for the remote badge in the extensions view.
  extensionIcon.starForeground: # The icon color for extension ratings.
  extensionIcon.verifiedForeground: # The icon color for extension verified publisher.
  extensionIcon.preReleaseForeground: # The icon color for pre-release extension.

  ###############################
  # - Quick picker colors
  pickerGroup.border: *border # Quick picker (Quick Open) color for grouping borders.
  pickerGroup.foreground: *activeColor # Quick picker (Quick Open) color for grouping labels.
  quickInput.background: *quickInputBackground # Quick input background color. The quick input widget is the container for views like the color theme picker.
  quickInput.foreground: *foregroundUnfocused # Quick input foreground color. The quick input widget is the container for views like the color theme picker.
  quickInputList.focusBackground: # Quick picker background color for the focused item.
  quickInputList.focusForeground: *foreground # Quick picker foreground color for the focused item.
  quickInputList.focusIconForeground: *foreground # Quick picker icon foreground color for the focused item.
  quickInputTitle.background: # Quick picker title background color. The quick picker widget is the container for pickers like the Command Palette.

  ###############################
  # - Keybinding label colors
  # Keybinding labels are shown when there is a keybinding associated with a command. An example of the keybinding label can be seen in the Command Palette:
  # Usages of the keybinding label include (but are not limited to):
  # * The Command Palette
  # * The Keyboard Shortcuts editor
  # * The Keyboard Shortcuts recorder modal
  # * The "feature contribution" section of an extensions marketplace page
  # The following customizations are available:
  keybindingLabel.background: !cast { color: *selectionBackground, light: -10 } # Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.
  keybindingLabel.foreground: *foreground # Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.
  keybindingLabel.border: !cast { color: *border, light: 4 } # Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.
  keybindingLabel.bottomBorder: !cast { color: *border, light: 4 } # Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.

  ###############################
  # - Keyboard shortcut table colors
  keybindingTable.headerBackground: # Background color for the keyboard shortcuts table header.
  keybindingTable.rowsBackground: # Background color for the keyboard shortcuts table alternating rows.

  ###############################
  # - Integrated Terminal colors
  terminal.background: *backgroundLight # The background of the Integrated Terminals viewport.
  terminal.border: *border # The color of the border that separates split panes within the terminal. This defaults to panel.border.
  terminal.foreground: *foreground # The default foreground color of the Integrated Terminal.
  terminal.ansiBlack: *Black # Black ANSI color in the terminal.
  terminal.ansiBlue: *Blue # Blue ANSI color in the terminal.
  terminal.ansiBrightBlack: *BrightBlack # BrightBlack ANSI color in the terminal.
  terminal.ansiBrightBlue: *BrightBlue # BrightBlue ANSI color in the terminal.
  terminal.ansiBrightCyan: *BrightCyan # BrightCyan ANSI color in the terminal.
  terminal.ansiBrightGreen: *BrightGreen # BrightGreen ANSI color in the terminal.
  terminal.ansiBrightMagenta: *BrightPurple # BrightMagenta ANSI color in the terminal.
  terminal.ansiBrightRed: *BrightRed # BrightRed ANSI color in the terminal.
  terminal.ansiBrightWhite: *BrightWhite # BrightWhite ANSI color in the terminal.
  terminal.ansiBrightYellow: *BrightYellow # BrightYellow ANSI color in the terminal.
  terminal.ansiCyan: *Cyan # Cyan ANSI color in the terminal.
  terminal.ansiGreen: *Green # Green ANSI color in the terminal.
  terminal.ansiMagenta: *Purple # Magenta ANSI color in the terminal.
  terminal.ansiRed: *Red # Red ANSI color in the terminal.
  terminal.ansiWhite: *White # White ANSI color in the terminal.
  terminal.ansiYellow: *Yellow # Yellow ANSI color in the terminal.
  terminal.selectionBackground: *selectionBackground # The selection background color of the terminal.
  terminalCursor.background: *cursorColor # The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.
  terminalCursor.foreground: *cursorColor # The foreground color of the terminal cursor.
  terminal.dropBackground: # The background color when dragging on top of terminals. The color should have transparency so that the terminal contents can still shine through.
  terminal.tab.activeBorder: *activeColor # Border on the side of the terminal tab in the panel. This defaults to tab.activeBorder.
  terminalCommandDecoration.defaultBackground: # The default terminal command decoration background color.
  terminalCommandDecoration.successBackground: *successBackground # The terminal command decoration background color for successful commands.
  terminalCommandDecoration.errorBackground: *errorBackground # The terminal command decoration background color for error commands.

  ###############################
  # - Debug colors
  debugToolBar.background: !cast { color: *backgroundLighter, light: -2 } # Debug toolbar background color.
  debugToolBar.border: # Debug toolbar border color.
  editor.stackFrameHighlightBackground: # Background color of the top stack frame highlight in the editor.
  editor.focusedStackFrameHighlightBackground: # Background color of the focused stack frame highlight in the editor.
  editor.inlineValuesForeground: # Color for the debug inline value text.
  editor.inlineValuesBackground: # Color for the debug inline value background.
  debugView.exceptionLabelForeground: # Foreground color for a label shown in the CALL STACK view when the debugger breaks on an exception
  debugView.exceptionLabelBackground: # Background color for a label shown in the CALL STACK view when the debugger breaks on an exception
  debugView.stateLabelForeground: # Foreground color for a label in the CALL STACK view showing the current sessions or threads state
  debugView.stateLabelBackground: # Background color for a label in the CALL STACK view showing the current sessions or threads state
  debugView.valueChangedHighlight: # Color used to highlight value changes in the debug views (ie. in the Variables view)
  debugTokenExpression.name: # Foreground color for the token names shown in debug views (ie. the Variables or Watch view)
  debugTokenExpression.value: # Foreground color for the token values shown in debug views
  debugTokenExpression.string: # Foreground color for strings in debug views
  debugTokenExpression.boolean: # Foreground color for booleans in debug views
  debugTokenExpression.number: # Foreground color for numbers in debug views
  debugTokenExpression.error: # Foreground color for expression errors in debug views

  ###############################
  # - Testing colors
  testing.iconFailed: # Color for the failed icon in the test explorer.
  testing.iconErrored: # Color for the Errored icon in the test explorer.
  testing.iconPassed: # Color for the passed icon in the test explorer.
  testing.runAction: # Color for run icons in the editor.
  testing.iconQueued: # Color for the Queued icon in the test explorer.
  testing.iconUnset: # Color for the Unset icon in the test explorer.
  testing.iconSkipped: # Color for the Skipped icon in the test explorer.
  testing.peekBorder: # Color of the peek view borders and arrow.
  testing.peekHeaderBackground: # Color of the peek view borders and arrow.
  testing.message.error.decorationForeground: # Text color of test error messages shown inline in the editor.
  testing.message.error.lineBackground: # Margin color beside error messages shown inline in the editor.
  testing.message.info.decorationForeground: # Text color of test info messages shown inline in the editor.
  testing.message.info.lineBackground: # Margin color beside info messages shown inline in the editor.

  ###############################
  # - Welcome page colors
  welcomePage.background: # Background color for the Welcome page.
  welcomePage.progress.background: # Foreground color for the Welcome page progress bars.
  welcomePage.progress.foreground: # Background color for the Welcome page progress bars.
  welcomePage.tileBackground: # Background color for the tiles on the Get Started page.
  welcomePage.tileHoverBackground: # Hover background color for the tiles on the Get Started.
  welcomePage.tileShadow: # Shadow color for the Welcome page walkthrough category buttons.
  walkThrough.embeddedEditorBackground: # Background color for the embedded editors on the Interactive Playground.

  ###############################
  # - Source Control colors
  scm.providerBorder: !cast { color: *background, alpha: 2 } # SCM Provider separator border.

  ###############################
  # - Git colors
  gitDecoration.addedResourceForeground: !cast {
      color: *Green,
      light: 25,
      alpha: 75,
    } # Color for added Git resources. Used for file labels and the SCM viewlet.
  gitDecoration.modifiedResourceForeground: !cast {
      color: *Yellow,
      light: 25,
      alpha: 75,
    } # Color for modified Git resources. Used for file labels and the SCM viewlet.
  gitDecoration.deletedResourceForeground: !cast {
      color: *Red,
      light: 25,
      alpha: 75,
    } # Color for deleted Git resources. Used for file labels and the SCM viewlet.
  gitDecoration.renamedResourceForeground: !cast {
      color: *Red,
      light: 25,
      alpha: 75,
    } # Color for renamed or copied Git resources. Used for file labels and the SCM viewlet.
  gitDecoration.stageModifiedResourceForeground: !cast {
      color: *Yellow,
      light: 25,
      alpha: 75,
    } # Color for staged modifications git decorations. Used for file labels and the SCM viewlet.
  gitDecoration.stageDeletedResourceForeground: !cast {
      color: *Red,
      light: 25,
      alpha: 75,
    } # Color for staged deletions git decorations. Used for file labels and the SCM viewlet.
  gitDecoration.untrackedResourceForeground: !cast {
      color: *Green,
      light: 25,
      alpha: 75,
    } # Color for untracked Git resources. Used for file labels and the SCM viewlet.
  gitDecoration.ignoredResourceForeground: !cast {
      color: *BrightBlack,
      alpha: 75,
    } # Color for ignored Git resources. Used for file labels and the SCM viewlet.
  gitDecoration.conflictingResourceForeground: !cast {
      color: *Red,
      light: 25,
      alpha: 75,
    } # Color for conflicting Git resources. Used for file labels and the SCM viewlet.
  gitDecoration.submoduleResourceForeground: # Color for submodule resources.

  ###############################
  # - Settings Editor colors
  # Note:  # These colors are for the GUI settings editor which can be opened with the Preferences: Open Settings (UI) command.

  settings.headerForeground: *White # The foreground color for a section header or active title.
  settings.modifiedItemIndicator: !cast { color: *activeColor, light: 10 } # The line that indicates a modified setting.
  settings.dropdownBackground: # Dropdown background.
  settings.dropdownForeground: *foreground # Dropdown foreground.
  settings.dropdownBorder: # Dropdown border.
  settings.dropdownListBorder: # Dropdown list border.
  settings.checkboxBackground: # Checkbox background.
  settings.checkboxForeground: *foreground # Checkbox foreground.
  settings.checkboxBorder: # Checkbox border.
  settings.rowHoverBackground: *listItemHover # The background color of a settings row when hovered.
  settings.textInputBackground: # Text input box background.
  settings.textInputForeground: *foreground # Text input box foreground.
  settings.textInputBorder: # Text input box border.
  settings.numberInputBackground: # Number input box background.
  settings.numberInputForeground: # Number input box foreground.
  settings.numberInputBorder: # Number input box border.
  settings.focusedRowBackground: *listItemSelected # Background color of a focused setting row.
  settings.focusedRowBorder: *focusColor # The color of the rows top and bottom border when the row is focused.
  settings.headerBorder: *border # The color of the header container border.
  settings.sashBorder: *border # The color of the Settings editor splitview sash border.

  ###############################
  # - Breadcrumbs colors
  # The theme colors for breadcrumbs navigation:

  breadcrumb.foreground: *foregroundDarker # Color of breadcrumb items.
  breadcrumb.background: # Background color of breadcrumb items.
  breadcrumb.focusForeground: *foregroundUnfocused # Color of focused breadcrumb items.
  breadcrumb.activeSelectionForeground: # Color of selected breadcrumb items.
  breadcrumbPicker.background: # Background color of breadcrumb item picker.

  ###############################
  # - Snippets colors
  # The theme colors for snippets:
  editor.snippetTabstopHighlightBackground: # Highlight background color of a snippet tabstop.
  editor.snippetTabstopHighlightBorder: # Highlight border color of a snippet tabstop.
  editor.snippetFinalTabstopHighlightBackground: # Highlight background color of the final tabstop of a snippet.
  editor.snippetFinalTabstopHighlightBorder: # Highlight border color of the final tabstop of a snippet.

#########################################################################
# - VScode syntax tokens
# Always organize the syntax following the standard groups:
#
#   Token syntax - Customization for all supported languages using the token.
# or:
#   Language syntax - Customization for tokens in an specific language.
#
# Also remember to always use the colors from the Base Color Palette
# with or without !cast
#########################################################################
tokenColors:
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Special cases
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Strong (Special cases)
    scope: strong
    settings:
      fontStyle: italic

  - name: Emphasis (Special cases)
    scope: emphasis
    settings:
      fontStyle: italic

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Comment
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Comment
    scope:
      - comment
      - punctuation.definition.comment
    settings:
      foreground: *BrightBlack

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - String
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: String
    scope: string
    settings:
      foreground: *BrightBlue

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Functions
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Function (Declarations)
    scope:
      - entity.name.function
      - support.function
      - meta.definition.method
      - meta.definition.function
      - support.constant.handlebars
      - source.powershell variable.other.member
      - entity.name.operator.custom-literal
    settings:
      foreground: *BrightYellow

  - name: Function (Calls)
    scope:
      - meta.function-call entity.name.function
      - meta.function-call variable.function
      - meta.function-call support.function
      - meta.function-call meta.function-call
      - meta.function.call entity.name.function
      - meta.method-call entity.name.function
    settings:
      foreground: *Green

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Keyword
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Keyword (Control / Special)
    scope:
      - keyword.operator
      - keyword.control
      - source.cpp keyword.operator.new
      - keyword.operator.delete
      - keyword.other.using
      - keyword.other.operator
      - entity.name.operator
      - keyword.import
    settings:
      foreground: *Purple

  - name: Keyword (Type Assign)
    scope:
      - keyword.operator.type.annotation
    settings:
      foreground: *foreground

  - name: Keyword (Control Flow)
    scope:
      - keyword.control.flow
    settings:
      foreground: *Red

  - name: Keyword (Operator assigment)
    scope:
      - keyword.operator.assignment
    settings:
      foreground: *Red

  - name: Keyword (Export)
    scope:
      - keyword.control.export
    settings:
      foreground: *Red

  - name: Keyword (Default)
    scope:
      - keyword.control.default
    settings:
      foreground: *Purple

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Storage
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Storage
    scope:
      - storage
      - storage.type
    settings:
      fontStyle: italic
      foreground: *Purple

  - name: Storage (Arrow Function)
    scope:
      - storage.type.function.arrow
    settings:
      foreground: *Red

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Constant
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Constant
    scope:
      - constant
      - constant.language
    settings:
      foreground: *BrightRed

  - name: Constant (Emphasis)
    scope:
      - constant.language.boolean
    settings:
      fontStyle: italic

  - name: Constant (Special characters)
    scope:
      - constant.character.escape.backslash
    settings:
      foreground: *Purple

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Variables
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Variables
    scope:
      - variable.other.readwrite
      - variable.other.object
      - variable.object.property
      - variable.other
    settings:
      foreground: *foreground

  - name: Variable (Language)
    scope:
      - variable.language
    settings:
      foreground: *Purple

  - name: Variable (Special Words)
    scope:
      - variable.language.this
      - variable.language.special.self
      - variable.language.self
    settings:
      foreground: *Yellow

  - name: Variable (Parameter)
    scope:
      - variable.parameter
    settings:
      fontStyle: italic
      foreground: *Yellow

  - name: Variable (Constant)
    scope:
      - variable.other.constant
    settings:
      foreground: *BrightPurple

  - name: Variable (Variable Call)
    scope:
      - meta.function-call variable.other.object
    settings:
      foreground: *Cyan

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Class
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Class
    scope:
      - entity.name.class
      - entity.name.type.class
    settings:
      foreground: *BrightYellow

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Support
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Support (Promise)
    scope:
      - support.class.promise
    settings:
      foreground: *Purple

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Types
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Types (Declaration / References)
    scope:
      - support.type
      - entity.name.namespace
      - entity.other.attribute
      - entity.name.scope-resolution
      - meta.type.annotation
      - entity.name.type.instance
      - entity.name.type.primitive
      - meta.type.annotation entity.name.type
      - meta.type.parameters entity.name.type
      - meta.type.parameters punctuation.definition.typeparameters
      - meta.return.type.arrow entity.name.type
      - meta.return.type support.type.primitive
      - meta.type.tuple entity.name.type
      - meta.block entity.name.type
    settings:
      foreground: *BrightCyan

  - name: Types (Built in)
    scope:
      - support.type.builtin
    settings:
      foreground: *BrightRed

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Attributes
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Attribute (Name)
    scope: entity.other.attribute-name
    settings:
      foreground: *Purple

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Tag
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Tag
    scope: entity.name.tag
    settings:
      foreground: *BrightPurple

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - URL
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: URL
    scope:
      - variable.parameter.url
    settings:
      fontStyle: underline
      foreground: *BrightBlue

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Punctuation
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Punctuation
    scope:
      - punctuation.accessor
      - meta.brace.round
      - punctuation.definition
      - punctuation.terminator.statement
      - keyword.operator.type.annotation
      - meta.array.literal meta.brace.square
      - punctuation.separator.dictionary.pair
      - meta.property-value punctuation.section.function
      - punctuation.section.property-list.begin.bracket.curly
      - punctuation.section.property-list.end.bracket.curly
      - punctuation.section.keyframes.begin
      - punctuation.section.keyframes.end
      - meta.brace.curly
      - punctuation.brackets.curly
      - punctuation.brackets.round
      - punctuation.comma
      - punctuation.separator
    settings:
      foreground: *BrightBlack

  - name: Punctuation (Special Words)
    scope:
      - punctuation.definition.block.tag
    settings:
      foreground: *Purple

  - name: Punctuation (Special Functions)
    scope:
      - punctuation.section.embedded.begin
      - punctuation.section.embedded.end
    settings:
      foreground: *Yellow

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Regex
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Regex (Operator)
    scope:
      - keyword.operator.quantifier.regexp
    settings:
      foreground: *BrightRed

  - name: Regex (Group)
    scope:
      - meta.group.regexp
    settings:
      foreground: *BrightGreen

  - name: Regex (Constant)
    scope:
      - constant.other.character-class.regexp
    settings:
      foreground: *BrightBlue

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - HTML / XML
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: HTML (Assign Key)
    scope: punctuation.separator.key-value.html
    settings:
      foreground: *Red

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - JSON
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: JSON (Quotes Punctuation)
    scope:
      - punctuation.support.type.property-name.begin.json
      - punctuation.support.type.property-name.end.json
      - punctuation.definition.string.begin.json
      - punctuation.definition.string.end.json
    settings:
      foreground: *BrightBlack

  - name: JSON (Separator)
    scope:
      - punctuation.separator.dictionary.key-value.json
    settings:
      foreground: *BrightBlack

  - name: JSON (Property Name)
    scope:
      - support.type.property-name.json
    settings:
      foreground: *BrightYellow

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Yaml
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Yaml (Anchor)
    scope:
      - punctuation.definition.anchor.yaml
    settings:
      fontStyle: italic
      foreground: *Yellow

  - name: Yaml (Tag)
    scope:
      - entity.name.tag.yaml
    settings:
      foreground: *Red

  - name: Yaml (Storage)
    scope:
      - storage.type.tag-handle.yaml
    settings:
      foreground: *Purple

  - name: Yaml (Anchor Name)
    scope:
      - entity.name.type.anchor.yaml
    settings:
      fontStyle: ''
      foreground: *BrightYellow

  - name: Yaml (Punctuation)
    scope:
      - punctuation.definition.alias.yaml
    settings:
      foreground: *Purple

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Javascript
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Javascript (Keyword / Special Word)
    scope:
      - meta.template.expression.js
    settings:
      foreground: *Blue

  - name: Javascript (Variable Other Object)
    scope:
      - variable.other.object.js
    settings:
      foreground: *Cyan

  - name: Javascript (Module Object)
    scope:
      - support.type.object.module.js
    settings:
      foreground: *Green

  - name: Javascript (Module Name)
    scope:
      - entity.name.type.module
    settings:
      foreground: *BrightYellow

  - name: Javascript (Module Name)
    scope:
      - source.jsx entity.name.tag support.class.component
      - source.js entity.name.tag support.class.component
    settings:
      foreground: *BrightGreen

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Typescript
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Typescript (Interface)
    scope:
      - entity.name.type.interface
    settings:
      foreground: *BrightGreen

  - name: Typescript (Type Definition)
    scope:
      - entity.name.type
    settings:
      foreground: *BrightGreen

  - name: Typescript (Variable Call or Access)
    scope:
      - variable.other.object.ts
      - variable.other.object.tsx
      - meta.block variable.other.object.ts
      - meta.block variable.other.object.tsx
    settings:
      foreground: *Cyan

  - name: Typescript (Module Name)
    scope:
      - source.tsx entity.name.tag support.class.component
    settings:
      foreground: *BrightGreen

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - SASS / CSS
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: CSS (ID)
    scope:
      - entity.other.attribute-name.id
    settings:
      foreground: *Yellow

  - name: CSS (Class)
    scope:
      - entity.other.attribute-name.class
    settings:
      fontStyle: italic
      foreground: *Yellow

  - name: CSS (Punctuation Definition)
    scope:
      - punctuation.definition.entity.css
      - punctuation.definition.entity.scss
      - punctuation.definition.entity.sass
    settings:
      foreground: *Red

  - name: CSS (Punctuation Separator)
    scope:
      - punctuation.separator.key-value.scss
      - punctuation.terminator.rule.scss
    settings:
      foreground: *BrightBlack

  - name: CSS (Property Name)
    scope:
      - support.type.property-name.css
      - support.type.property-name.scss
      - support.type.property-name.sass
    settings:
      foreground: *BrightCyan

  - name: CSS (Variable)
    scope:
      - variable.css
      - variable.scss
      - variable.sass
    settings:
      foreground: *Cyan

  - name: CSS (Media Argument)
    scope:
      - support.type.property-name.media.css
      - support.type.property-name.media.scss
      - support.type.property-name.media.sass
    settings:
      foreground: *BrightCyan

  - name: CSS (Keyframe - Rules Keyword)
    scope:
      - entity.other.keyframe-offset
    settings:
      foreground: *Blue

  - name: CSS (Keyframe - Name)
    scope:
      - variable.parameter.keyframe-list
      - support.constant.media
    settings:
      fontStyle:
      foreground: *BrightYellow

  - name: CSS (Keyword Control)
    scope:
      - keyword.control.at-rule.keyframes
      - keyword.control.at-rule.media
      - source.css keyword.operator.logical
      - source.scss keyword.operator.logical
      - source.sass keyword.operator.logical
    settings:
      fontStyle: italic
      foreground: *Purple

  - name: CSS (Pseudo Class)
    scope:
      - entity.other.attribute-name.pseudo-class
      - entity.other.attribute-name.pseudo-element
    settings:
      foreground: *BrightGreen

  - name: CSS (Unit)
    scope:
      - meta.property-value keyword.other.unit
    settings:
      foreground: *Red

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Markdown
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Markdown (Heading)
    scope:
      - heading
    settings:
      fontStyle: ''
      foreground: *Cyan

  - name: Markdown (Punctuation Heading)
    scope:
      - punctuation.definition.heading.markdown
    settings:
      foreground: *Cyan

  - name: Markdown (Link)
    scope:
      - markup.underline.link.markdown
      - markup.underline.link.image.markdown
    settings:
      fontStyle: ''
      foreground: *BrightRed

  - name: Markdown (Quote)
    scope:
      - markup.quote.markdown
    settings:
      fontStyle: 'italic'
      foreground: *BrightBlack

  - name: Markdown (Bold)
    scope:
      - markup.bold.markdown
    settings:
      fontStyle: 'bold'

  - name: Markdown (Italic)
    scope:
      - markup.italic.markdown
    settings:
      fontStyle: 'italic'

  - name: Markdown (List)
    scope:
      - punctuation.definition.list.begin.markdown
    settings:
      fontStyle: ''
      foreground: *Yellow

  - name: Markdown (Code Block Language)
    scope:
      - fenced_code.block.language.markdown
    settings:
      fontStyle: ''
      foreground: *BrightCyan

  - name: Markdown (Inline String)
    scope:
      - markup.inline.raw.string.markdown
    settings:
      fontStyle: ''
      foreground: *BrightBlue

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Python
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Python (Punctuation)
    scope:
      - punctuation.definition.arguments.begin.python
      - punctuation.definition.arguments.end.python
      - punctuation.separator.arguments.python
      - punctuation.separator.period.python
      - punctuation.parenthesis.begin.python
      - punctuation.parenthesis.end.python
    settings:
      fontStyle: ''
      foreground: *BrightBlack

  - name: Python (Function Call Arguments)
    scope:
      - meta.function-call.arguments.python
    settings:
      foreground: *foreground

  - name: Python (Special Words)
    scope:
      - variable.language.special.self.python
    settings:
      fontStyle: ''
      foreground: *Yellow

  - name: Python (Keyword Control)
    scope:
      - keyword.control.flow.python
    settings:
      fontStyle: ''
      foreground: *Purple

  - name: Python (Punctuaction Colon)
    scope:
      - punctuation.separator.colon.python
      - punctuation.section.class.begin.python
      - punctuation.section.function.begin.python
    settings:
      fontStyle: ''
      foreground: *Purple

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - C-lang / C++
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: C-lang (Types)
    scope:
      - storage.type.built-in.primitive.c
      - meta.function.definition.parameters.c storage.type.built-in.primitive.c
    settings:
      fontStyle: ''
      foreground: *BrightCyan

  - name: C-lang (Types)
    scope:
      - storage.modifier.array.bracket.square.c
    settings:
      fontStyle: ''
      foreground: *foreground

  - name: C++ (Function Call)
    scope:
      - entity.name.function.call.cpp
      - entity.name.function.member.cpp
    settings:
      foreground: *Green

  - name: C++ (Preprocessor Function)
    scope:
      - source.c meta.preprocessor entity.name.function.preprocessor
    settings:
      foreground: *BrightPurple

  - name: C++ (Preprocessor Function)
    scope:
      - source.cpp meta.using-namespace.cpp entity.name.namespace.cpp
    settings:
      foreground: *BrightGreen

  - name: C++ (Types)
    scope:
      - source.cpp storage.type.built-in.primitive.cpp
    settings:
      foreground: *BrightCyan

  - name: C++ (Preprocessor Punctuation)
    scope:
      - source.c keyword.control.directive.conditional punctuation.definition.directive
    settings:
      foreground: *Red

  - name: C++ (Variable Call)
    scope:
      - variable.other.object.access.cpp
      - variable.other.object.property.cpp
      - variable.other.property.cpp
    settings:
      foreground: *Cyan

  - name: C++ (Keyword Control)
    scope:
      - keyword.control.return.cpp
      - keyword.control.break.cpp
    settings:
      foreground: *Red

  - name: C++ (Punctuation - Access / Return)
    scope:
      - punctuation.separator.pointer-access.cpp
      - punctuation.separator.namespace.access.cpp
      - punctuation.definition.lambda.return-type.cpp
    settings:
      foreground: *Red

  - name: C++ (Punctuation - Hashtag)
    scope:
      - meta.preprocessor.include.cpp punctuation.definition.directive.cpp
    settings:
      foreground: !cast { color: *BrightBlack, light: 18 }

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Java
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Java (Punctuation)
    scope:
      - punctuation.separator.period.java
    settings:
      foreground: *foreground

  - name: Java (Keyword Import)
    scope:
      - keyword.other.import.java
    settings:
      foreground: *Blue

  - name: Java (Storage Import)
    scope:
      - storage.modifier.import.java
    settings:
      fontStyle: ''
      foreground: *foreground

  - name: Java (Function Name)
    scope:
      - meta.method.identifier.java
    settings:
      foreground: *BrightYellow

  - name: Java (Punctuation)
    scope:
      - punctuation.bracket.round.java
      - punctuation.bracket.square.java
      - punctuation.terminator.java
      - punctuation.separator.period.java
      - punctuation.section.catch.begin.bracket.curly.java
      - punctuation.section.catch.end.bracket.curly.java
      - punctuation.section.block.begin.bracket.curly.java
      - punctuation.section.block.end.bracket.curly.java
      - punctuation.section.try.begin.bracket.curly.java
      - punctuation.section.try.end.bracket.curly.java
      - punctuation.section.method.begin.bracket.curly.java
      - punctuation.section.method.end.bracket.curly.java
      - punctuation.section.class.begin.bracket.curly.java
      - punctuation.section.class.end.bracket.curly.java
    settings:
      foreground: *BrightBlack

  - name: Java (Type)
    scope:
      - storage.type.java
      - storage.type.object.array.java
    settings:
      foreground: *BrightCyan

  - name: Java (Variable call)
    scope:
      - source.java variable.other.object
      - source.java variable.other.object.property
    settings:
      foreground: *Cyan

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Go
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Go (Keywords)
    scope:
      - source.go keyword
    settings:
      fontStyle: italic
      foreground: *Purple

  - name: Go (Punctuation)
    scope:
      - punctuation.definition.imports.begin.bracket.round.go
      - punctuation.definition.imports.end.bracket.round.go
      - source.go punctuation.definition
      - source.go punctuation.other
    settings:
      foreground: *BrightBlack

  - name: Go (Name Package)
    scope:
      - entity.name.package.go
    settings:
      foreground: *Cyan

  - name: Go (Keyword Package)
    scope:
      - keyword.package.go
    settings:
      foreground: *Blue

  - name: Go (Function Call)
    scope:
      - source.go support.function
    settings:
      foreground: *Green

  - name: Go (Type Name)
    scope:
      - entity.name.type.go
    settings:
      foreground: *BrightGreen

  - name: Go (Type)
    scope:
      - source.go storage.type
    settings:
      foreground: *BrightCyan

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - R-lang
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: R-lang (Keywords)
    scope:
      - source.r meta.function keyword.control
    settings:
      fontStyle: italic
      foreground: *Purple

  - name: R-lang (Function Call)
    scope:
      - source.r support.function
    settings:
      foreground: *Green

  - name: R-lang (Keyword Special)
    scope:
      - source.r keyword.other
    settings:
      foreground: *Red

  - name: R-lang (Invalid)
    scope:
      - source.r invalid.illegal.variable.other
    settings:
      fontStyle: italic
      foreground: *BrightPurple

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Shellscript
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Shellscript (Function Call)
    scope:
      - source.shell support.function
    settings:
      foreground: *Green

  - name: Shellscript (Variable Definition)
    scope:
      - source.shell punctuation.definition.variable
    settings:
      foreground: *Blue

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Perl
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Perl (Function Call)
    scope:
      - source.perl support.function
    settings:
      foreground: *Green

  - name: Perl (Variable Definition)
    scope:
      - source.perl punctuation.definition.variable
    settings:
      foreground: *Cyan

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Rust
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Rust (Constant)
    scope:
      - source.rust constant.other
    settings:
      foreground: *BrightPurple

  - name: Rust (Type Method Name)
    scope:
      - source.rust entity.name.type.struct
      - source.rust entity.name.type.enum
    settings:
      foreground: *BrightGreen

  - name: Rust (Type)
    scope:
      - source.rust entity.name.type
    settings:
      foreground: *BrightCyan

  - name: Rust (Type Result)
    scope:
      - source.rust entity.name.type.result
    settings:
      foreground: *BrightYellow

  - name: Rust (Punctuation)
    scope:
      - source.rust keyword.operator.key-value
      - source.rust punctuation.brackets.angle
      - source.rust keyword.operator.access.dot
      - source.rust punctuation.semi
    settings:
      foreground: *BrightBlack

  - name: Rust (Attribute Definition)
    scope:
      - source.rust meta.attribute
    settings:
      foreground: *foreground

  - name: Rust (Attribute Definition Punctuation)
    scope:
      - source.rust punctuation.definition.attribute
      - source.rust punctuation.brackets.attribute
    settings:
      foreground: *Yellow

  - name: Rust (Namespace Keyword)
    scope:
      - source.rust entity.name.namespace
    settings:
      foreground: *BrightPurple

  - name: Rust (Namespace Keyword Operator)
    scope:
      - source.rust keyword.operator.namespace
    settings:
      foreground: *Purple

  - name: Rust (Keyword)
    scope:
      - source.rust keyword.other.fn
    settings:
      fontStyle: italic
      foreground: *Purple

  - name: Rust (Keyword Other)
    scope:
      - source.rust keyword.other
    settings:
      foreground: *Purple

  - name: Rust (Storage Modifier)
    scope:
      - source.rust storage.modifier
    settings:
      fontStyle: ''
      foreground: *Red

  - name: Rust (Return)
    scope:
      - source.rust keyword.operator.arrow.fat
    settings:
      fontStyle: ''
      foreground: *Red

  - name: Rust (Macro Call)
    scope:
      - source.rust meta.macro entity.name.function.macro
    settings:
      fontStyle: ''
      foreground: *Cyan

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Swift
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Swift (Keyword)
    scope:
      - keyword.other.declaration-specifier.accessibility.swift
      - keyword.other.declaration-specifier.swift
    settings:
      foreground: *Purple

  - name: Swift (Keyword Control)
    scope:
      - source.swift keyword.operator.type.function.swift
      - source.swift keyword.control.transfer.swift
    settings:
      foreground: *Red

  - name: Swift (Function Definition)
    scope:
      - source.swift meta.definition.function
    settings:
      foreground: *foreground

  - name: Swift (Punctuation)
    scope:
      - source.swift punctuation.section
      - source.swift punctuation.definition.arguments
    settings:
      foreground: *foreground

  - name: Swift (Punctuation Preprocessor)
    scope:
      - source.swift punctuation.definition.preprocessor
    settings:
      foreground: *Red

  - name: Swift (Parameter)
    scope:
      - source.swift variable.parameter.function.swift entity.name.function.swift
    settings:
      foreground: *Yellow

  - name: Swift (Parameter Clause)
    scope:
      - source.swift meta.parameter-clause.swift entity.name.function.swift
    settings:
      foreground: *BrightCyan

  - name: Swift (Function Call)
    scope:
      - source.swift support.function.swift
    settings:
      foreground: *Green

  - name: Swift (Variable Call)
    scope:
      - source.swift meta.function-call.swift support.type.swift
      - source.swift variable.other.swift
    settings:
      foreground: *Cyan

  - name: Swift (Storage Modifier)
    scope:
      - source.swift storage.modifier.attribute.swift
    settings:
      fontStyle: ''
      foreground: *BrightGreen

  - name: Swift (Storage Modifier Punctuation)
    scope:
      - source.swift storage.modifier.attribute.swift punctuation.definition.attribute.swift
    settings:
      foreground: *BrightGreen

  - name: Swift (Import Object Name)
    scope:
      - source.swift meta.import entity.name.type
    settings:
      foreground: *foreground

  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  # - Coffee script
  # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  - name: Coffee (Variable call)
    scope:
      - source.coffee variable.other.object.coffee
      - source.coffee variable.other.object.property.coffee
      - source.coffee support.class.coffee
      - entity.name.type.object.coffee
    settings:
      foreground: *Cyan

  - name: Coffee (Special Keyword Call)
    scope:
      - source.coffee variable.other.readwrite.instance.coffee
    settings:
      foreground: *Cyan

  - name: Coffee (Object Call)
    scope:
      - meta.class.instance.constructor.coffee entity.name.type.instance.coffee
    settings:
      foreground: *Green
